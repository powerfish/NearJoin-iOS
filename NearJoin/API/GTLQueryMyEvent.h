/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2015 Google Inc.
 */

//
//  GTLQueryMyEvent.h
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   myEvent/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryMyEvent (8 custom class methods, 11 custom properties)

#if GTL_BUILT_AS_FRAMEWORK
  #import "GTL/GTLQuery.h"
#else
  #import "GTLQuery.h"
#endif

@interface GTLQueryMyEvent : GTLQuery

//
// Parameters valid on all methods.
//

// Selector specifying which fields to include in a partial response.
@property (nonatomic, copy) NSString *fields;

//
// Method-specific parameters; see the comments below for more information.
//
@property (nonatomic, assign) NSInteger category;
// Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
@property (nonatomic, copy) NSString *descriptionProperty;
@property (nonatomic, copy) NSString *endDate;
@property (nonatomic, copy) NSString *extraContactInfo;
@property (nonatomic, copy) NSString *host;
@property (nonatomic, copy) NSString *hostUrl;
@property (nonatomic, copy) NSString *location;
@property (nonatomic, copy) NSString *participant;
@property (nonatomic, copy) NSString *startDate;
@property (nonatomic, copy) NSString *title;

#pragma mark -
#pragma mark Service level methods
// These create a GTLQueryMyEvent object.

// Method: myEvent.addEvent
//  Authorization scope(s):
//   kGTLAuthScopeMyEventUserinfoEmail
+ (instancetype)queryForAddEventWithCategory:(NSInteger)category
                         descriptionProperty:(NSString *)descriptionProperty
                                     endDate:(NSString *)endDate
                            extraContactInfo:(NSString *)extraContactInfo
                                        host:(NSString *)host
                                     hostUrl:(NSString *)hostUrl
                                    location:(NSString *)location
                                   startDate:(NSString *)startDate
                                       title:(NSString *)title;

// Method: myEvent.addParticipant
//  Authorization scope(s):
//   kGTLAuthScopeMyEventUserinfoEmail
+ (instancetype)queryForAddParticipantWithParticipant:(NSString *)participant
                                                title:(NSString *)title;

// Method: myEvent.deleteEvent
//  Authorization scope(s):
//   kGTLAuthScopeMyEventUserinfoEmail
+ (instancetype)queryForDeleteEventWithTitle:(NSString *)title;

// Method: myEvent.deleteParticipant
//  Authorization scope(s):
//   kGTLAuthScopeMyEventUserinfoEmail
+ (instancetype)queryForDeleteParticipantWithParticipant:(NSString *)participant
                                                   title:(NSString *)title;

// Method: myEvent.listEvents
//  Authorization scope(s):
//   kGTLAuthScopeMyEventUserinfoEmail
// Fetches a GTLMyEventCollectionResponseEventRecord.
+ (instancetype)queryForListEvents;

// Method: myEvent.listEventsByCategory
//  Authorization scope(s):
//   kGTLAuthScopeMyEventUserinfoEmail
// Fetches a GTLMyEventCollectionResponseEventRecord.
+ (instancetype)queryForListEventsByCategoryWithCategory:(NSInteger)category;

// Method: myEvent.listEventsByHost
//  Authorization scope(s):
//   kGTLAuthScopeMyEventUserinfoEmail
// Fetches a GTLMyEventCollectionResponseEventRecord.
+ (instancetype)queryForListEventsByHostWithHost:(NSString *)host;

// Method: myEvent.listParticipants
//  Authorization scope(s):
//   kGTLAuthScopeMyEventUserinfoEmail
// Fetches a GTLMyEventCollectionResponseString.
+ (instancetype)queryForListParticipantsWithTitle:(NSString *)title;

@end
